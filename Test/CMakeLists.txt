cmake_minimum_required(VERSION 3.10)
project(Test)

add_library(Test Test.cpp)
target_link_libraries(Test PUBLIC ${OPENCL})

add_executable(ContextCreate    ContextCreate.cpp)
add_executable(ContextDevice    ContextDevice.cpp)
add_executable(BufferMapCopy    BufferMapCopy.cpp)
add_executable(Buffer2D3DCopy   Buffer2D3DCopy.cpp)
add_executable(BufferReadWrite  BufferReadWrite.cpp)
add_executable(BufferAsyncWrite BufferAsyncWrite.cpp)
add_executable(ImageCreation    ImageCreation.cpp)
add_executable(ImageMapCopy     ImageMapCopy.cpp)
add_executable(ImageReadWrite   ImageReadWrite.cpp)
add_executable(KernelExecute    KernelExecute.cpp)
add_executable(KernelBtsort     KernelBtsort.cpp)
add_executable(EventMapCopy     EventMapCopy.cpp)
add_executable(EventReadWrite   EventReadWrite.cpp)
add_executable(EventExecute     EventExecute.cpp)
add_executable(ProgramBinary    ProgramBinary.cpp)

target_link_libraries(ContextCreate    Test)
target_link_libraries(ContextDevice    Test)
target_link_libraries(BufferMapCopy    Test)
target_link_libraries(Buffer2D3DCopy   Test)
target_link_libraries(BufferReadWrite  Test)
target_link_libraries(BufferAsyncWrite Test)
target_link_libraries(ImageCreation    Test)
target_link_libraries(ImageMapCopy     Test)
target_link_libraries(ImageReadWrite   Test)
target_link_libraries(KernelExecute    Test)
target_link_libraries(KernelBtsort     Test)
target_link_libraries(EventMapCopy     Test)
target_link_libraries(EventReadWrite   Test)
target_link_libraries(EventExecute     Test)
target_link_libraries(ProgramBinary    Test)

if(CMAKE_GENERATOR MATCHES "Visual Studio")
    set(WORK_DIR "${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/")
else()
    set(WORK_DIR "${CMAKE_CURRENT_BINARY_DIR}/")
endif()

add_custom_command(TARGET ContextCreate POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${CMAKE_CURRENT_LIST_DIR}/program.cl" "${WORK_DIR}")

add_test(NAME Context.Create    COMMAND ContextCreate    WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Context.Device    COMMAND ContextDevice    WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Buffer.MapCopy    COMMAND BufferMapCopy    WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Buffer.2D3DCopy   COMMAND Buffer2D3DCopy   WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Buffer.ReadWrite  COMMAND BufferReadWrite  WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Buffer.AsyncWrite COMMAND BufferAsyncWrite WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Image.Creation    COMMAND ImageCreation    WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Image.MapCopy     COMMAND ImageMapCopy     WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Image.ReadWrite   COMMAND ImageReadWrite   WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Kernel.Execute    COMMAND KernelExecute    WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Kernel.Btsort     COMMAND KernelBtsort     WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Event.MapCopy     COMMAND EventMapCopy     WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Event.ReadWrite   COMMAND EventReadWrite   WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Event.Execute     COMMAND EventExecute     WORKING_DIRECTORY  "${WORK_DIR}")
add_test(NAME Program.Binary    COMMAND ProgramBinary    WORKING_DIRECTORY  "${WORK_DIR}")